import type { GetServerSideProps } from "next";
import { useEffect, useState } from "react";
import Head from "next/head";
import FlightList from "../components/FlightList";
import { Launch } from "../types/FlightListTypes";
import Layout from "../components/Layout";

interface FlightListPageProps {
  initialLaunches: Launch[];
  initialPage: number;
  initialPerPage: number;
}

const FlightListPage = ({
  initialLaunches,
  initialPage,
  initialPerPage,
}: FlightListPageProps) => {
  const [page, setPage] = useState(initialPage);
  const [perPage, setPerPage] = useState(initialPerPage);
  const [launches, setLaunches] = useState(initialLaunches);
  const [isFirstRender, setIsFirstRender] = useState(true);
  const [isLoading, setIsLoading] = useState(false);
  const [searchValue, setSearchValue] = useState("");

  const handleSearchClick = () => {
    // TODO:
    // Implement search
  };

  useEffect(() => {
    if (isFirstRender) {
      setIsFirstRender(false);

      return;
    }

    const fetchLaunches = async () => {
      setIsLoading(true);
      const response = await fetch(
        `https://api.spacexdata.com/v3/launches?offset=${
          page * perPage
        }&limit=${perPage}&order=desc`
      );
      const launches = await response.json();

      setLaunches(launches);
      setIsLoading(false);
    };

    fetchLaunches();
  }, [page, perPage]);

  const paginationProps = {
    page,
    perPage,
    setPage,
    setPerPage,
  };

  const searchProps = {
    searchValue,
    setSearchValue,
    handleSearchClick,
  };

  return (
    <>
      <Head>
        <title>SpaceX Launches - list</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <FlightList
          launches={launches}
          {...paginationProps}
          {...searchProps}
          isLoading={isLoading}
        />
      </Layout>
    </>
  );
};

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  const initialPage = Number(query.page) || 0;
  const initialPerPage = Number(query.perPage) || 10;

  const response = await fetch(
    `https://api.spacexdata.com/v3/launches?page=${
      initialPage * initialPerPage
    }&limit=${initialPerPage}&order=desc`
  );
  const initialLaunches = await response.json();

  return {
    props: {
      initialLaunches,
      initialPage,
      initialPerPage,
    },
  };
};

export default FlightListPage;
